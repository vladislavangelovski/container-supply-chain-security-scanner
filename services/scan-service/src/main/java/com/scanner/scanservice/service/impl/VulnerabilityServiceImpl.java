package com.scanner.scanservice.service.impl;

import com.scanner.scanservice.model.VulnerabilityFinding;
import com.scanner.scanservice.repository.VulnerabilityFindingRepository;
import com.scanner.scanservice.service.VulnerabilityFindingService;
import lombok.RequiredArgsConstructor;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import java.util.Optional;
import java.util.UUID;

@Service
@RequiredArgsConstructor
public class VulnerabilityServiceImpl implements VulnerabilityFindingService {

    private final VulnerabilityFindingRepository vulnerabilityFindingRepository;
    @Override
    public Page<VulnerabilityFinding> listFindings(UUID reportId, Optional<String> severity, Optional<String> pkgName, Pageable pageable) {
        if(severity.isPresent() && pkgName.isPresent()) {
            return vulnerabilityFindingRepository.findByScanReport_Scan_IdAndSeverityAndPkgName(
                    reportId, severity.get(), pkgName.get(), pageable
            );
        }
        else if(severity.isPresent()) {
            return vulnerabilityFindingRepository.findByScanReport_Scan_IdAndSeverity(
                    reportId, severity.get(), pageable
            );
        }
        else if (pkgName.isPresent()) {
            return vulnerabilityFindingRepository.findByScanReport_Scan_IdAndPkgName(
                    reportId, pkgName.get(), pageable
            );
        }
        else {
            return vulnerabilityFindingRepository.findByScanReport_Scan_Id(reportId, pageable);
        }
    }
}
